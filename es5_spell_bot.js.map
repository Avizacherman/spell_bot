{"version":3,"sources":["spell_bot.js"],"names":[],"mappings":";;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACpC,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAChC,IAAI,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAA;AAC1C,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAA;;AAE5C,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;;AAG3C,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,GAAG,EAAG;AAAC,QAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;CAAC,CAAE,CAAA;;AAE7C,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,YAAU;AAC1B,QAAO,CAAC,GAAG,mBAAiB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAG,CAAA;AAC9C,QAAO,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;;;;;;AAC3B,uBAAgB,KAAK,CAAC,QAAQ,8HAAE;AAA3B,UAAO;;AACX,QAAK,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAA;GACvE;;;;;;;;;;;;;;;CACD,CAAC,CAAA;;AAGF,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,OAAO,EAAC;AACpC,QAAO,CAAC,mDAAmD,EAAE,UAAS,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAC;AACzF,MAAG,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;;AAExB,MAAI,OAAO,GAAG,KAAK,CAAC,uBAAuB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;AAC5D,YAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;AAC7B,YAAU,CAAC,OAAO,CAAC,UAAS,SAAS,EAAC;AACpC,OAAG,OAAO,CAAC,IAAI,EAAC;AACf,QAAG,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE;AAClE,YAAO,mDAAiD,SAAS,CAAC,EAAE,EAAI,UAAS,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAC;AACpG,UAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;AAC/B,UAAI,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAA;;AAEpC,aAAO,CAAC,IAAI,SAAU,KAAK,CAAC,IAAI,mBAAc,KAAK,CAAC,WAAW,oBAAe,KAAK,CAAC,MAAM,YAAO,MAAM,CAAC,SAAS,EAAE,YAAO,MAAM,CAAC,UAAU,EAAE,kBAAa,KAAK,CAAC,YAAY,8BAAyB,KAAK,CAAC,gBAAgB,0BAAqB,KAAK,CAAC,YAAY,sBAAiB,KAAK,CAAC,QAAQ,qBAAgB,KAAK,CAAC,UAAU,mBAAc,KAAK,CAAC,KAAK,YAAO,MAAM,CAAC,aAAa,EAAE,eAAU,KAAK,CAAC,WAAW,UAAU,CAAA;MAC7Z,CAAC,CAAA;KACF;IACD;GAED,CAAC,CAAA;EACF,CAAC,CAAA;CACF,CAAC,CAAA;;AAEF,KAAK,CAAC,KAAK,EAAE,CAAA","file":"es5_spell_bot.js","sourcesContent":["var Slack = require('slack-client');\nvar request = require('request')\nvar botToken = process.env.SPELL_BOT_TOKEN\nvar SpellHelpers = require('./spellhelpers')\n\nvar slack = new Slack(botToken, true, true)\n\n\nslack.on('error', (err)=>{console.log(err)} )\n\nslack.on('open', function(){\n\tconsole.log(`Connected to ${slack.team.name}`)\n\tconsole.log(slack.channels)\n\tfor (channel of slack.channels) {\n\t\tslack.getChannelGroupOrDMByID(channel).send(\"With a POOF I've arrived\")\n\t}\n})\n\n\nslack.on('message', function(message){\n\trequest('https://spell-buddy.herokuapp.com/api/spell_names', function(err, response, body){\n\t\tif(err) console.log(err)\n\n\t\tvar channel = slack.getChannelGroupOrDMByID(message.channel)\n\t\tspellNames = JSON.parse(body)\n\t\tspellNames.forEach(function(spellName){\n\t\t\t\tif(message.text){\n\t\t\t\t\tif(message.text.toLowerCase().match(spellName.name.toLowerCase())) {\n\t\t\t\t\t\trequest(`https://spell-buddy.herokuapp.com/api/spells/${spellName.id}`, function(err, response, body){\n\t\t\t\t\t\t\tvar spell = JSON.parse(body)[0]\n\t\t\t\t\t\t\tvar helper = new SpellHelpers(spell)\n\n\t\t\t\t\t\t\tchannel.send(`\\`\\`\\`${spell.name}\\n Levels: ${spell.spell_level} \\n School: ${spell.school} \\t ${helper.subschool()} \\t ${helper.descriptor()} \\n Save: ${spell.saving_throw} \\t Spell Resistance: ${spell.spell_resistence} \\n Casting Time: ${spell.casting_time} \\t Duration: ${spell.duration} Components: ${spell.components} \\n Range: ${spell.range} \\t ${helper.areaOrTargets()} \\n \\n ${spell.description} \\`\\`\\``)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t})\n\t})\n})\n\nslack.login()\n"]}